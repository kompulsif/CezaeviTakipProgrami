<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="imageList1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>282, 17</value>
  </metadata>
  <data name="imageList1.ImageStream" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFdTeXN0ZW0uV2luZG93cy5Gb3JtcywgVmVyc2lvbj00LjAuMC4w
        LCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkFAQAAACZTeXN0
        ZW0uV2luZG93cy5Gb3Jtcy5JbWFnZUxpc3RTdHJlYW1lcgEAAAAERGF0YQcCAgAAAAkDAAAADwMAAABY
        DQAAAk1TRnQBSQFMAgEBBAEAAcgBAAHIAQABHgEAAR4BAAT/ASEBAAj/AUIBTQE2BwABNgMAASgDAAF4
        AwABPAMAAQEBAAEgBQABgAFw/wD/AP8A/wD/AP8A/wD/AP8A/wD/AP8A/wD/AP8A/wD/AP8A/wD/AP8A
        /wD/AP8A/wD/AP8A/wD/AP8A/wD/AP8A/wD/AP8A/wD/AP8A/wD/AP8A/wD/AP8A/wD/AP8A/wD/AP8A
        /wD/AP8A/wD/AP8A/wD/AP8A/wBzAAJlAWMB3QHvAdkBzQH/Ae8B2QHNAf8B7wHZAc0B/wM8AWbAAAMV
        ARwDCgENPAADQgFzxAADZQHdDP8DPAFmSAABvgFnAUAB/QM8AWRwAAHzAeMB2gH/AZkBkAGKAfsDCQEL
        NAADPQFoAf0B+QH3Af8BlQF+AWUB/EAAA0gBhHwAA2UB3Qz/AzwBZkgAAb4BkQFWAf0E/wGDAX0BTQH6
        ZAADFgEeAfMB4wHaCf8BkwJ9AfoDDgESLAADOgFhAfwB+AH1Cf8BlQF+AWUB/DQAAxEBFgHtAdUByAH/
        Af0B+wH6Af8DUQGfeAADZQHdDP8DPAFmSAABvgGRAVYB/Qj/AfAB3AHQAf8DQgF0XAACYQFcAdkQ/wK+
        AawB/QMJAQskAAM9AWgB/AH4AfUN/wH9AfkB9wH/A0IBciwAAxYBHQHqAcwBuwr/Av4B/wJaAVgBt3QA
        A2UB3Qz/AzwBZkgAAb4BkQFWAf0Q/wF1AWUBYwH2AxMBGlgAAmMBWwHkEP8BmQGQAYoB+wMKAQ0cAAND
        AXUB/QH5AfcN/wH8AfgB9QH/Az0BaCwAAxIBGAHnAcYBtBX/Al4BWwHNcAADZQHdDP8DPAFmSAABvgGR
        AVYB/RT/A74B/QNRAZ5YAAJlAWAB4xD/AZYBgQF9AfoDCgENFAADQwF1AfsB9QHyDf8B/AH4AfUB/wM6
        AWEsAAMLAQ4BpwGCAX4B/Bz/AmUBXAHnbAADZQHdDP8DPAFmSAABvgGRAVYB/Rz/AXQCaAH0AwkBC1QA
        AmMBWwHkEP8BmQGQAYoB+wMJAQsMAAM9AWgB/QH5AfcN/wH9AfkB9wH/Az0BaDAAAb4BuQGiAf0Q/wK+
        Aa4B/RD/AWQCYgHuaAADZQHdDP8DPAFmSAABvgGRAVYB/ST/AmQBYAHbVAACYgFeAdcB/wL+Df8BjQGG
        AYAB+QMNAREEAAM6AWEB/AH4AfUN/wH7AfUB8gH/A0MBdSwAAwYBCAF2AW0BYwH2EP8CZAFgAdsDCQEM
        AXACbgH1EP8BZgJlAewEAmAAA2UB3Qz/AzwBZkgAAb4BkQFWAf0o/wHdAa8BlQH/AyUBN1AAAmEBXQHU
        EP8BjQGGAYAB+QM9AWgB/AH4AfUN/wH9AfkB9wH/A0MBdSwAAwcBCQF2AW0BZQH2EP8CXwFdAckIAAMJ
        AQsDbwHzEP8DawHyAwMBBFwAA2UB3Qz/AzwBZkgAAb4BkQFWAf0s/wH8AfgB9gH/AmABXQHOUAACZgFf
        AeUQ/wH9AfkB9w3/AfwB+AH1Af8DPQFoLAADBQEGAXMBaQFoAfQQ/wJdAVoBxxAAAwMBBAFzAmgB9BD/
        AYkCfQH6MAADHQEpAzwBZgM8AWYDPAFmAzwBZgM8AWYDPAFmAzwBZgM8AWYDPAFmAzwBZgNsAesM/wNS
        AaMDPAFmAzwBZgM8AWYDPAFmAzwBZgM8AWYDPAFmAzwBZgM8AWYDPAFmIAABvgGRAVYB/TT/AZoBkgGN
        AfsDOQFfTAACYwFbAeQY/wH8AfgB9QH/AzoBYSwABAEBcwJoAfQQ/wNeAdIcAAHMAYUBXRH/AdoBqAGL
        Af8sAAMtAURg/wHvAdkBzQH/IAABvgGRAVYB/Tj/Af4B/AH7Af8CZQFgAeNMAAJlAVwB5xD/Af0B+QH3
        Af8DPgFpMAABhAF9AWkB+hD/AmUBXAHnJAABmAGAAW8B/hD/AeABtAGcAf8oAAMtAURg/wHvAdkBzQH/
        IAABvgGRAVYB/UD/AfEB3QHTAf8DQAFuQAADOgFhAfwB+AH1Ff8BjQGGAYAB+QMNAREsAAJpAWAB6Az/
        AmwBYQHrLAACagFhAeYQ/wHiAbsBpQH/AwwBECAAAy0BRGD/Ae8B2QHNAf8gAAG+AZEBVgH9PP8BvAGi
        AZQB/gM8AWVAAAM9AWgB/AH4AfUd/wGNAYYBgAH5AwkBCywAAmMBXwHVBP8CYwFbAeQ0AAJfAVsB0AH/
        Av4N/wGqAYkBfgH8AxYBHhwAAy0BRANlAd0DZQHdA2UB3QNlAd0DZQHdA2UB3QNlAd0DZQHdA2UB3QNl
        Ad0BlAGAAV8B+wz/A2wB6wNlAd0DZQHdA2UB3QNlAd0DZQHdA2UB3QNlAd0DZQHdA2UB3QJlAWMB3SAA
        Ab4BkQFWAf01/wH+Af0B/wJfAVsB00QAA0IBcwH9AfkB9w3/AfwB+AH1Af8CZgFfAeUQ/wK+AbUB/QMK
        AQ0sAAJXAVYBsjwAAlwBWQHGEP8BvQGmAZoB/gMaASNEAANlAd0M/wM8AWZIAAG+AZEBVgH9MP8BpwJ+
        AfwDLQFFRAADQwF1AfsB9QHyDf8B/AH4AfUB/wM6AWEEAAJjAVsB5BD/AZYBgQF9AfoDCgENbAACWgFY
        Ab0Q/wO+Af0DJQE3QAADZQHdDP8DPAFmSAABvgGRAVYB/Sj/AfsB9wH0Af8CXQFaAccDAgEDRAADPQFo
        Af0B+QH3Df8B/QH5AfcB/wM9AWgMAAJmAV8B5RD/AZkBkAGKAfsDCQELbAADUgGgEP8B+QHxAewB/wMu
        AUg8AANlAd0M/wM8AWZIAAG+AZEBVgH9JP8BpAJ+AfwDEwEaSAADOgFhAfwB+AH1Df8B+wH1AfIB/wND
        AXUUAAJiAV4B1wH/Av4N/wGTAn0B+gMOARJsAAJLAUoBiwHKAcYBxAH+DP8B+AHtAecB/wM3AVo4AANl
        Ad0M/wM8AWZIAAG+AZEBVgH9HP8DvgH9AlsBWQHATAADPQFoAfwB+AH1Df8B/QH5AfcB/wNDAXUcAAJi
        AV4B1xD/AZMCfQH6AwkBC2wAA0QBewHJAcMBwAH+DP8B+QHxAewB/wM+AWo0AANlAd0M/wM8AWZIAAG+
        AZEBVgH9GP8DcAHxAw0BEUwAA0MBdQH9AfkB9w3/AfwB+AH1Af8DPQFoJAACYwFbAeQQ/wGZAZABigH7
        AwoBDWwAAzgBXAH6AfIB7w3/AloBVwHCNAADZQHdDP8DPAFmSAABvgGRAVYB/RD/AcEBrgGjAf4DSQGF
        VAACUgFRAaQM/wH8AfgB9QH/AzoBYSwAAmUBYAHjDP8B8wHjAdoB/wMWAR5wAAMdASkB9QHnAd8F/wJh
        AV0BzzgAA2UB3Qz/AzwBZkgAAb4BkQFWAf0M/wHMAYUBXQH/AwwBD1wAAlkBVgG2BP8B/QH5AfcB/wM9
        AWg0AAJjAVsB5AT/AfMB4wHaAf98AAMWAR4CYgFdAdw8AANlAd0M/wM8AWZIAAG+AZEBVgH9BP8B7wHZ
        Ac0B/wM6AWFoAANSAaADQgFyPAACYgFeAdcDFQEcwAADZQHdDP8DPAFmSAABvgGOAVEB/QJjAV0B3/8A
        fQADZQHdDP8DPAFmSAADMwFR/wCBAAMtAUQDLQFEAy0BRAMtAUQDHQEp/wD/AP8A/wBsAAFCAU0BPgcA
        AT4DAAEoAwABeAMAATwDAAEBAQABAQUAAcABAxYAA///AOIAD/8BAA//AQAJ/wGDBf8BAAH8Af8B/gb/
        AYMC/wE/Av8BAAH8AX8B/AF/Af8BvwP/AYMC/wEfAv8BAAHwAT8B+AE/Af4BHwP/AYMC/wEHAv8BAAHw
        AR8B8AEfAfwBDwP/AYMC/wEBAv8BAAH4AQ8B4AE/AfgBBwP/AYMC/wEAAv8BAAH8AQcBwAF/AfABAwP/
        AYMC/wEAAT8B/wEAAf4BAwGAAf8B8AEBA/8BgwL/AQABHwH/AQAB/wIBAf8BwAEAAX8C/wGDAv8BAAEH
        Af8BAAH/AYABAwH/AYABwAE/Av8BgwL/AQABAwH/AQAB/wHAAQcB/wEBAeABPwH8AwAB/wIAAf8BAAH/
        AeABDwH+AQMB+AEfAfwDAAH/AgABfwEAAf8B8AEfAf4BBwH8AQ8B/AMAAf8CAAEfAQAB/wHgAQ8B/gEP
        Af4BAwH8AwAB/wIAAT8BAAH/AcABBwH/AR8B/wEBAfwDAAH/AgAB/wEAAf8BgAEDAf8BvwH/AYAC/wGD
        Av8BAAEBAf8BAAH/AgED/wHAAX8B/wGDAv8BAAEDAf8BAAH+AQMBgAP/AeABPwH/AYMC/wEAAQ8B/wEA
        AfwBBwHAAX8C/wHwAR8B/wGDAv8BAAE/Af8BAAH4AQ8B4AE/Av8B+AEPAf8BgwL/AQABfwH/AQAB8AEf
        AfABHwL/AfwBDwH/AYMC/wEBAv8BAAHwAT8B+AEfAv8B/gEfAf8BgwL/AQMC/wEAAfgBfwH8AX8D/wE/
        Af8BgwL/AQ8C/wEAAfwB/wH+AX8F/wGDAv8BPwL/AQAJ/wGDAv8BfwL/AQAJ/wGDBf8BAA//AQAP/wEA
        Cw==
</value>
  </data>
  <metadata name="contextMenuStrip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>392, 17</value>
  </metadata>
  <metadata name="$this.TrayHeight" type="System.Int32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>62</value>
  </metadata>
</root>